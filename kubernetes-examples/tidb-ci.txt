
dongxu [8:15 PM]  
no, you cannot start tidb-server directly, default storage engine is local disk. If you want to use tikv as the underlying storage engine, u need to use some flags. I'll give u the command line sample.


----- June 23rd -----
dongxu [4:13 AM]  
你可以参考这个脚本 http://f.0xffff.me/f/cluster

[4:13]  
将脚本中的 SOURCE_DIR 改成你自己的路径

[4:14]  
这个文件夹下有两个文件夹，一个是 tikv（源码），一个是 tidb 的源码

[4:14]  
[113] source ll
total 12K
drwxrwxr-x  5 jay jay 4.0K  5月 29 21:49 bench-scanner
drwxrwxr-x  5 jay jay 4.0K  6月 21 11:17 metric-receiver
lrwxrwxrwx  1 jay jay   42  6月  3 19:41 tidb -> /home/jay/.go/src/github.com/pingcap/tidb/
drwxrwxr-x 12 jay jay 4.0K  6月 14 18:00 tikv

[4:14]  
比如这个

dongxu [4:20 AM]  
这个脚本是我们方便本地调试的脚本，里面包括起停服务


----- June 26th -----
dongxu [9:36 PM]  
GitHub · Where software is built
https://github.com/pingcap/tikv/commit/aaa8a97b67413c71e12d70591cdbcc2162f1fb20



When a node starts, the metadata of node, store and region are registered into PD. The status of each Region and Store is reported to PD regularly.
  
 +### Usage
 +
 +See [Usage](./USAGE.md) for how to install and run TiKV.
 +
  ### Contributing
  
  See [CONTRIBUTING](./CONTRIBUTING.md) for details on submitting patches and the contribution workflow.

+# How to use TiKV
 +
 +## Getting started
 +
 +### Installing TiKV
 +
 +TiKV depends on Etcd and PD, which both need [*Go*](https://golang.org/) installed on your machine (version 1.5+ is required). 
 +
 +The latest Etcd version supports gRPC is required. 
 +
 +Etcd:
 +
 +```sh
 +git clone https://github.com/coreos/etcd.git ${GOPATH}/src/github.com/coreos/etcd
 +cd ${GOPATH}/src/github.com/coreos/etcd
 +./build
 +```
 +
 +The `etcd` binary execution will be installed in `${GOPATH}/src/github.com/coreos/etcd/bin`
 +
 +PD:
 +
 +```sh
 +git clone https://github.com/pingcap/pd.git ${GOPATH}/src/github.com/pingcap/pd
 +cd ${GOPATH}/src/github.com/pingcap/pd
 +make build
 +```
 +
 +The `pd-server` binary execution will be installed in `${GOPATH}/src/github.com/pingcap/pd/bin`
 +
 +TiKV:
 +
 +```sh
 +git clone https://github.com/pingcap/tikv.git tikv
 +cd tikv
 +make release
 +```
 +
 +The `tikv-server` binary execution will be installed in `tikv/target/release/`
 +
 +You should also install TiDB for using TiKV.
 +
 +```sh
 +git clone https://github.com/pingcap/tidb.git ${GOPATH}/src/github.com/pingcap/tidb
 +cd ${GOPATH}/src/github.com/pingcap/tidb
 +make server
 +```
 +
 +The `tidb-server` binary execution will be installed in `${GOPATH}/src/github.com/pingcap/tidb/tidb-server`
 +
 +### Running single node
 +
 +Start Etcd with default listening port 2379.
 +
 +```sh
 +etcd 
 +```
 +
 +Start PD with listening port 1234 and cluster ID 1.
 +
 +```sh
 +pd-server -addr 127.0.0.1:1234 --etcd 127.0.0.1:2379 --cluster-id 1 --root pd
 +```
 +
 +Cluster ID is to distinguish different TiKV cluster.
 +The root `pd` is the root prefix path in Etcd. 
 +
 +Start TiKV with listening port 5551, saving data path `data1` and cluster ID 1.
 +
 +```sh
 +tikv-server -S raftkv --addr 127.0.0.1:5551 --pd 127.0.0.1:1234 -s data1 --cluster-id 1
 +```
 +
 +Start TiDB with listening port 5001. 
 +
 +```sh
 +tidb-server --store=tikv --path="127.0.0.1:2379/pd?cluster=1" -lease 1 -P 5001
 +```
 +
 +Use official `mysql` client to connect TiDB and enjoy it. 
 +
 +```sh
 +mysql -h 127.0.0.1 -P 5001 -u root -D test
 +```
 +
 +### Running cluster
 +
 +In production, the cluster deployment is recommended. 
 +
 +Start Etcd cluster, see [multi-machine cluster](https://github.com/coreos/etcd/blob/master/Documentation/op-guide/clustering.md).
 +
 +Let's assume the Etcd cluster endpoints are 127.0.0.1:2379,127.0.0.1:3379,127.0.0.1:4379.
 +
 +Start PD cluster.
 +```sh
 +pd-server -addr 127.0.0.1:1234 --etcd 127.0.0.1:2379,127.0.0.1:3379,127.0.0.1:4379 --cluster-id 1 --root pd
 +pd-server -addr 127.0.0.1:2234 --etcd 127.0.0.1:2379,127.0.0.1:3379,127.0.0.1:4379 --cluster-id 1 --root pd
 +pd-server -addr 127.0.0.1:3234 --etcd 127.0.0.1:2379,127.0.0.1:3379,127.0.0.1:4379 --cluster-id 1 --root pd
 +```
 +
 +Start TiKV cluster.
 +```sh
 +tikv-server -S raftkv --addr 127.0.0.1:5551 --pd 127.0.0.1:1234,127.0.0.1:2234,127.0.0.1:3234 -s data1 --cluster-id 1
 +tikv-server -S raftkv --addr 127.0.0.1:5552 --pd 127.0.0.1:1234,127.0.0.1:2234,127.0.0.1:3234 -s data2 --cluster-id 1
 +tikv-server -S raftkv --addr 127.0.0.1:5553 --pd 127.0.0.1:1234,127.0.0.1:2234,127.0.0.1:3234 -s data3 --cluster-id 1
 +```
 +
 +Start TiDB and use `mysql`.
 +```sh
 +tidb-server --store=tikv --path="127.0.0.1:2379,127.0.0.1:3379,127.0.0.1:4379/pd?cluster=1" -lease 1 -P 5001
 +
 +mysql -h 127.0.0.1 -P 5001 -u root -D test
 +```
